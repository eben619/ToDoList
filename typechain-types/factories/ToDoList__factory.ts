/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ToDoList, ToDoListInterface } from "../ToDoList";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "activityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ActivityCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "activityIndex",
        type: "uint256",
      },
    ],
    name: "ActivityDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "activityIndex",
        type: "uint256",
      },
    ],
    name: "ActivityMarkedAsDone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_activityIndex",
        type: "uint256",
      },
    ],
    name: "deleteActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_activityIndex",
        type: "uint256",
      },
    ],
    name: "getActivity",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isDone",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivityCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_activityIndex",
        type: "uint256",
      },
    ],
    name: "markActivityAsDone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061120e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806322ce30bf1461005c5780632838ae0e1461007a578063922635d814610096578063db470f00146100c7578063df1bd99f146100e3575b600080fd5b6100646100ff565b60405161007191906108be565b60405180910390f35b610094600480360381019061008f9190610a33565b61010b565b005b6100b060048036038101906100ab9190610aa8565b610252565b6040516100be929190610b6f565b60405180910390f35b6100e160048036038101906100dc9190610aa8565b6103e3565b005b6100fd60048036038101906100f89190610aa8565b610562565b005b60008080549050905090565b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816101c69190610dab565b5060408201518160020160006101000a81548160ff0219169083151502179055505050600060016000805490506101fd9190610eac565b9050803373ffffffffffffffffffffffffffffffffffffffff167ff803f66decac4fc962919ed00757f0e949a3525a10caec28628c78e2068a1c03846040516102469190610ee0565b60405180910390a35050565b606060008080549050831061029c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029390610f4e565b60405180910390fd5b60008084815481106102b1576102b0610f6e565b5b90600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461033090610bce565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610bce565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050806020015181604001519250925050915091565b600080549050811061042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190610f4e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166000828154811061045557610454610f6e565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d49061100f565b60405180910390fd5b6001600082815481106104f3576104f2610f6e565b5b906000526020600020906003020160020160006101000a81548160ff021916908315150217905550803373ffffffffffffffffffffffffffffffffffffffff167f7fbab8af7d259aeb88ce3172af01583f3516ce4416e0ee9b3c48f213c41fd30260405160405180910390a350565b60008054905081106105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090610f4e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600082815481106105d4576105d3610f6e565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106539061100f565b60405180910390fd5b60008190505b60016000805490506106749190610eac565b81101561078a57600060018261068a919061102f565b8154811061069b5761069a610f6e565b5b9060005260206000209060030201600082815481106106bd576106bc610f6e565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190816107469190611079565b506002820160009054906101000a900460ff168160020160006101000a81548160ff021916908315150217905550905050808061078290611161565b915050610662565b50600080548061079d5761079c6111a9565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006107e99190610848565b6002820160006101000a81549060ff021916905550509055803373ffffffffffffffffffffffffffffffffffffffff167fe696246dc146a3e8b4440807bc1e318e8ef247d9cccb0cc53fca9f988c9183cf60405160405180910390a350565b50805461085490610bce565b6000825580601f106108665750610885565b601f0160209004906000526020600020908101906108849190610888565b5b50565b5b808211156108a1576000816000905550600101610889565b5090565b6000819050919050565b6108b8816108a5565b82525050565b60006020820190506108d360008301846108af565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610940826108f7565b810181811067ffffffffffffffff8211171561095f5761095e610908565b5b80604052505050565b60006109726108d9565b905061097e8282610937565b919050565b600067ffffffffffffffff82111561099e5761099d610908565b5b6109a7826108f7565b9050602081019050919050565b82818337600083830152505050565b60006109d66109d184610983565b610968565b9050828152602081018484840111156109f2576109f16108f2565b5b6109fd8482856109b4565b509392505050565b600082601f830112610a1a57610a196108ed565b5b8135610a2a8482602086016109c3565b91505092915050565b600060208284031215610a4957610a486108e3565b5b600082013567ffffffffffffffff811115610a6757610a666108e8565b5b610a7384828501610a05565b91505092915050565b610a85816108a5565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd6108e3565b5b6000610acc84828501610a93565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b0f578082015181840152602081019050610af4565b60008484015250505050565b6000610b2682610ad5565b610b308185610ae0565b9350610b40818560208601610af1565b610b49816108f7565b840191505092915050565b60008115159050919050565b610b6981610b54565b82525050565b60006040820190508181036000830152610b898185610b1b565b9050610b986020830184610b60565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610be657607f821691505b602082108103610bf957610bf8610b9f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c24565b610c6b8683610c24565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ca8610ca3610c9e846108a5565b610c83565b6108a5565b9050919050565b6000819050919050565b610cc283610c8d565b610cd6610cce82610caf565b848454610c31565b825550505050565b600090565b610ceb610cde565b610cf6818484610cb9565b505050565b5b81811015610d1a57610d0f600082610ce3565b600181019050610cfc565b5050565b601f821115610d5f57610d3081610bff565b610d3984610c14565b81016020851015610d48578190505b610d5c610d5485610c14565b830182610cfb565b50505b505050565b600082821c905092915050565b6000610d8260001984600802610d64565b1980831691505092915050565b6000610d9b8383610d71565b9150826002028217905092915050565b610db482610ad5565b67ffffffffffffffff811115610dcd57610dcc610908565b5b610dd78254610bce565b610de2828285610d1e565b600060209050601f831160018114610e155760008415610e03578287015190505b610e0d8582610d8f565b865550610e75565b601f198416610e2386610bff565b60005b82811015610e4b57848901518255600182019150602085019450602081019050610e26565b86831015610e685784890151610e64601f891682610d71565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eb7826108a5565b9150610ec2836108a5565b9250828203905081811115610eda57610ed9610e7d565b5b92915050565b60006020820190508181036000830152610efa8184610b1b565b905092915050565b7f41637469766974792063616e6e6f7420626520666f756e640000000000000000600082015250565b6000610f38601883610ae0565b9150610f4382610f02565b602082019050919050565b60006020820190508181036000830152610f6781610f2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f7520646f206e6f742068617665207065726d697373696f6e20746f20646560008201527f6c65746520746869732061637469766974790000000000000000000000000000602082015250565b6000610ff9603283610ae0565b915061100482610f9d565b604082019050919050565b6000602082019050818103600083015261102881610fec565b9050919050565b600061103a826108a5565b9150611045836108a5565b925082820190508082111561105d5761105c610e7d565b5b92915050565b60008154905061107281610bce565b9050919050565b81810361108757505061115f565b61109082611063565b67ffffffffffffffff8111156110a9576110a8610908565b5b6110b38254610bce565b6110be828285610d1e565b6000601f8311600181146110ed57600084156110db578287015490505b6110e58582610d8f565b865550611158565b601f1984166110fb87610bff565b965061110686610bff565b60005b8281101561112e57848901548255600182019150600185019450602081019050611109565b8683101561114b5784890154611147601f891682610d71565b8355505b6001600288020188555050505b5050505050505b565b600061116c826108a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361119e5761119d610e7d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220c4f9288389e910ad52148e661a42e52fc96e0e8e97493af369da14b6907e7d9c64736f6c63430008130033";

type ToDoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToDoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ToDoList__factory extends ContractFactory {
  constructor(...args: ToDoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ToDoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ToDoList__factory {
    return super.connect(runner) as ToDoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToDoListInterface {
    return new Interface(_abi) as ToDoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ToDoList {
    return new Contract(address, _abi, runner) as unknown as ToDoList;
  }
}
